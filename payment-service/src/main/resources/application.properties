spring.application.name=payment

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.datasource.url=jdbc:postgresql://localhost:5432/rentacarpaymentdb
spring.datasource.username=postgres
spring.datasource.password=44525136
spring.jpa.properties.jakarta.persistence.validation.mode = none

server.port = 0

eureka.instance.prefer-ip-address = true
eureka.client.register-with-eureka= true
eureka.client.fetch-registry = true
eureka.client.service-url.defaultZone = http://localhost:7007/eureka
eureka.instance.instance-id = ${spring.application.name}:${instanceId:${random.value}}

spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id: inventory3
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.topic.name=rental_topics3
